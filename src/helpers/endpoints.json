{
	"album": {
		"addtags": {
			"endpointName": "album.addTags",
			"description": "Add tags to an album",
			"parameters": {
				"required": ["artist", "album", "tags", "sk"],
				"optional": []
			},
			"isPostOnly": true
		},
		"getinfo": {
			"endpointName": "album.getInfo",
			"description": "Gets metadata for an album, also fetches tracklist if exists",
			"parameters": {
				"required": ["albuminput"],
				"optional": ["autocorrect", "username", "sk", "lang"]
			}
		},
		"gettags": {
			"endpointName": "album.getTags",
			"description": "Gets the tags a specific user has submitted for an album",
			"parameters": {
				"required": ["albuminput", "userinput"],
				"optional": ["autocorrect", "username", "sk"]
			}
		},
		"gettoptags": {
			"endpointName": "album.getTopTags",
			"description": "Gets the most applied tags on an album.",
			"parameters": {
				"required": ["albuminput"],
				"optional": ["autocorrect"]
			}
		},
		"removetag": {
			"endpointName": "album.removeTag",
			"description": "Remove a user's application of a tag from an album",
			"parameters": {
				"required": ["artist", "album", "tag", "sk"],
				"optional": []
			},
			"isPostOnly": true
		},
		"search": {
			"endpointName": "album.search",
			"description": "Search last.fm for albums matching a query",
			"parameters": {
				"required": ["album"],
				"optional": ["page", "limit"]
			}
		}
	},
	"artist": {
		"addtags": {
			"endpointName": "artist.addTags",
			"description": "Add tags to an artist",
			"parameters": {
				"required": ["artist", "tags", "sk"],
				"optional": []
			},
			"isPostOnly": true
		},
		"getcorrection": {
			"endpointName": "artist.getCorrection",
			"description": "Check if an artist has a last.fm autocorrect, and get the corrected name if so.",
			"parameters": {
				"required": ["artist"],
				"optional": []
			}
		},
		"getinfo": {
			"endpointName": "artist.getInfo",
			"description": "Gets metadata for an artist, also fetches bio if exists",
			"parameters": {
				"required": ["artistinput"],
				"optional": ["autocorrect", "username", "sk", "lang"]
			}
		},
		"getsimilar": {
			"endpointName": "artist.getSimilar",
			"description": "Gets similar artists to the specified artist",
			"parameters": {
				"required": ["artistinput"],
				"optional": ["autocorrect", "limit"]
			}
		},
		"gettags": {
			"endpointName": "artist.getTags",
			"description": "Gets the tags a specific user has submitted for an artist",
			"parameters": {
				"required": ["artistinput", "userinput"],
				"optional": ["autocorrect", "username", "sk"]
			}
		},
		"gettopalbums": {
			"endpointName": "artist.getTopAlbums",
			"description": "Gets the most popular albums of an artist",
			"parameters": {
				"required": ["artistinput"],
				"optional": ["autocorrect", "page", "limit"]
			}
		},
		"gettoptags": {
			"endpointName": "artist.getTopTags",
			"description": "Gets the most applied tags on an artist.",
			"parameters": {
				"required": ["artistinput"],
				"optional": ["autocorrect"]
			}
		},
		"gettoptracks": {
			"endpointName": "artist.getTopTracks",
			"description": "Gets the most popular tracks of an artist",
			"parameters": {
				"required": ["artistinput"],
				"optional": ["autocorrect", "page", "limit"]
			}
		},
		"removetag": {
			"endpointName": "artist.removeTag",
			"description": "Remove a user's application of a tag from an artist",
			"parameters": {
				"required": ["artist", "tag", "sk"],
				"optional": []
			},
			"isPostOnly": true
		},
		"search": {
			"endpointName": "artist.search",
			"description": "Search last.fm for artists matching a query",
			"parameters": {
				"required": ["artist"],
				"optional": ["page", "limit"]
			}
		}
	},
	"auth": {
		"gettoken": {
			"endpointName": "auth.getToken",
			"description": "Gets a request token for an API account.",
			"parameters": {
				"required": [],
				"optional": []
			}
		},
		"getsession": {
			"endpointName": "auth.getSession",
			"description": "Gets a session key for a user.",
			"parameters": {
				"required": ["token"],
				"optional": []
			},
			"isPostOnly": true
		},
		"getmobilesession": {
			"endpointName": "auth.getMobileSession",
			"description": "Gets a session key for a user using password.",
			"parameters": {
				"required": ["username", "password"],
				"optional": []
			},
			"isPostOnly": true
		}
	},
	"chart": {
		"gettopartists": {
			"endpointName": "chart.getTopArtists",
			"description": "Gets the most popular artists on last.fm.",
			"parameters": {
				"required": [],
				"optional": ["page", "limit"]
			}
		},
		"gettoptags": {
			"endpointName": "chart.getTopTags",
			"description": "Gets the most applied tags on last.fm.",
			"parameters": {
				"required": [],
				"optional": ["page", "limit"]
			}
		},
		"gettoptracks": {
			"endpointName": "chart.getTopTracks",
			"description": "Gets the most popular tracks on last.fm.",
			"parameters": {
				"required": [],
				"optional": ["page", "limit"]
			}
		}
	},
	"geo": {
		"gettopartists": {
			"endpointName": "geo.getTopArtists",
			"description": "Gets the most popular artists on last.fm in a country.",
			"parameters": {
				"required": ["country"],
				"optional": ["page", "limit"]
			}
		},
		"gettoptracks": {
			"endpointName": "geo.getTopTracks",
			"description": "Gets the most popular tracks on last.fm in a country.",
			"parameters": {
				"required": ["country"],
				"optional": ["page", "limit", "location"]
			}
		}
	},
	"library": {
		"getartists": {
			"endpointName": "library.getArtists",
			"description": "Gets the most popular artists on last.fm in a country.",
			"parameters": {
				"required": ["userinput"],
				"optional": ["page", "limit", "username", "sk"]
			}
		}
	},
	"tag": {
		"getinfo": {
			"endpointName": "tag.getInfo",
			"description": "Gets data about a tag.",
			"parameters": {
				"required": ["tag"],
				"optional": ["lang"]
			}
		},
		"gettopalbums": {
			"endpointName": "tag.getTopAlbums",
			"description": "Gets the albums where most people have tagged using a given tag.",
			"parameters": {
				"required": ["tag"],
				"optional": ["page", "limit"]
			}
		},
		"gettopartists": {
			"endpointName": "tag.getTopArtists",
			"description": "Gets the artists where most people have tagged using a given tag.",
			"parameters": {
				"required": ["tag"],
				"optional": ["page", "limit"]
			}
		},
		"gettoptags": {
			"endpointName": "tag.getTopTags",
			"description": "Gets the most applied tags on last.fm.",
			"parameters": {
				"required": [],
				"optional": ["page", "limit"]
			}
		},
		"gettoptracks": {
			"endpointName": "tag.getTopTracks",
			"description": "Gets the tracks where most people have tagged using a given tag.",
			"parameters": {
				"required": ["tag"],
				"optional": ["page", "limit"]
			}
		}
	},
	"track": {
		"addtags": {
			"endpointName": "track.addTags",
			"description": "Add tags to a track",
			"parameters": {
				"required": ["artist", "track", "tags", "sk"],
				"optional": []
			},
			"isPostOnly": true
		},
		"getcorrection": {
			"endpointName": "track.getCorrection",
			"description": "Check if a track and its artist have a last.fm autocorrect, and get the corrected name(s) if so.",
			"parameters": {
				"required": ["artist", "track"],
				"optional": []
			}
		},
		"getinfo": {
			"endpointName": "track.getInfo",
			"description": "Gets metadata for a track.",
			"parameters": {
				"required": ["trackinput"],
				"optional": ["autocorrect", "username", "sk"]
			}
		},
		"gettags": {
			"endpointName": "track.getTags",
			"description": "Gets the tags a specific user has submitted for an album",
			"parameters": {
				"required": ["trackinput", "userinput"],
				"optional": ["autocorrect", "username", "sk"]
			}
		},
		"gettoptags": {
			"endpointName": "track.getTopTags",
			"description": "Gets the most applied tags on an album.",
			"parameters": {
				"required": ["trackinput"],
				"optional": ["autocorrect"]
			}
		},
		"love": {
			"endpointName": "track.love",
			"description": "Love a track.",
			"parameters": {
				"required": ["artist", "track", "sk"],
				"optional": []
			},
			"isPostOnly": true
		},
		"removetag": {
			"endpointName": "track.removeTag",
			"description": "Remove a user's application of a tag from an album",
			"parameters": {
				"required": ["artist", "track", "tag", "sk"],
				"optional": []
			},
			"isPostOnly": true
		},
		"search": {
			"endpointName": "track.search",
			"description": "Search last.fm for tracks matching a query",
			"parameters": {
				"required": ["track"],
				"optional": ["artist", "page", "limit"]
			}
		},
		"unlove": {
			"endpointName": "track.unlove",
			"description": "Unlove a track.",
			"parameters": {
				"required": ["artist", "track", "sk"],
				"optional": []
			},
			"isPostOnly": true
		},
		"updatenowplaying": {
			"endpointName": "track.updateNowPlaying",
			"description": "Set a track as now playing for a user.",
			"parameters": {
				"required": ["artist", "track", "sk"],
				"optional": ["album", "tracknumber", "mbid", "duration", "albumartist"]
			},
			"isPostOnly": true
		}
	},
	"user": {
		"getfriends": {
			"endpointName": "user.getFriends",
			"description": "Gets a list of friends for a user.",
			"parameters": {
				"required": ["userinput"],
				"optional": ["recenttracks", "limit", "page"]
			}
		},
		"getinfo": {
			"endpointName": "user.getInfo",
			"description": "Gets info about a user.",
			"parameters": {
				"required": ["userinput"],
				"optional": ["sk", "username"]
			}
		},
		"getlovedtracks": {
			"endpointName": "user.getLovedTracks",
			"description": "Gets a list of a user's loved tracks.",
			"parameters": {
				"required": ["userinput"],
				"optional": ["sk", "username", "limit", "page"]
			}
		},
		"getpersonaltags": {
			"endpointName": "user.getPersonalTags",
			"description": "Gets a list of the artists/albums/tracks a user has applied a specified tag to.",
			"parameters": {
				"required": ["userinput", "tag", "taggingtype"],
				"optional": ["sk", "username", "limit", "page"]
			}
		},
		"getrecenttracks": {
			"endpointName": "user.getRecentTracks",
			"description": "Gets a list of scrobbles for a user, starting from the most recent one.",
			"parameters": {
				"required": ["userinput"],
				"optional": ["sk", "username", "limit", "page", "from", "to", "extended"]
			}
		},
		"gettopalbums": {
			"endpointName": "user.getTopAlbums",
			"description": "Gets a user's most scrobbled albums for a period.",
			"parameters": {
				"required": ["userinput"],
				"optional": ["sk", "username", "limit", "page", "period"]
			}
		},
		"gettopartists": {
			"endpointName": "user.getTopArtists",
			"description": "Gets a user's most scrobbled artists for a period.",
			"parameters": {
				"required": ["userinput"],
				"optional": ["sk", "username", "limit", "page", "period"]
			}
		},
		"gettoptags": {
			"endpointName": "user.getTopTags",
			"description": "Gets a user's most applied tags.",
			"parameters": {
				"required": ["userinput"],
				"optional": ["sk", "username", "limit"]
			}
		},
		"gettoptracks": {
			"endpointName": "user.getTopTracks",
			"description": "Gets a user's most scrobbled tracks for a period.",
			"parameters": {
				"required": ["userinput"],
				"optional": ["sk", "username", "limit", "page", "period"]
			}
		},
		"getweeklyalbumchart": {
			"endpointName": "user.getWeeklyAlbumChart",
			"description": "Gets weekly album chart for a user. Returns most recent if none supplied.",
			"parameters": {
				"required": ["userinput"],
				"optional": ["username", "sk", "limit", "from", "to"]
			}
		},
		"getweeklyartistchart": {
			"endpointName": "user.getWeeklyArtistChart",
			"description": "Gets weekly artist chart for a user. Returns most recent if none supplied.",
			"parameters": {
				"required": ["userinput"],
				"optional": ["username", "sk", "limit", "from", "to"]
			}
		},
		"getweeklychartlist": {
			"endpointName": "user.getWeeklyChartList",
			"description": "Gets a list of applicable timestamps for weekly chart endpoints.",
			"parameters": {
				"required": [],
				"optional": []
			}
		},
		"getweeklytrackchart": {
			"endpointName": "user.getWeeklyTrackChart",
			"description": "Gets weekly track chart for a user. Returns most recent if none supplied.",
			"parameters": {
				"required": ["userinput"],
				"optional": ["username", "sk", "limit", "from", "to"]
			}
		}
	},
	"helper": {
		"getcombo": {
			"endpointName": "helper.getCombo",
			"description": "Gets information about a user's consecutive playing streak. Limit can be arbitrarily high, but keep in mind there will be an additional API request for every 1000 limit.",
			"parameters": {
				"required": ["userinput", "limit"],
				"optional": ["username", "sk"]
			}
		},
		"getnowplaying": {
			"endpointName": "helper.getNowPlaying",
			"description": "Gets information about a user's currently playing track.",
			"parameters": {
				"required": ["userinput", "detailtypes"],
				"optional": ["username", "sk"]
			}
		},
		"getmatchingartists": {
			"endpointName": "helper.getMatchingArtists",
			"description": "Gets the shared artists and playcounts between two users. Playcount array is sorted as [user1, user2]. Limited to a maximum of 1000.",
			"parameters": {
				"required": ["user1", "user2", "limit", "period"],
				"optional": []
			}
		},
		"cachescrobbles": {
			"endpointName": "helper.cacheScrobbles",
			"description": "Goes through the scrobbles of an individual user, and returns an event emitter that will return every scrobble the user has made, or every scrobble made after a certain number of scrobbles.",
			"parameters": {
				"required": ["username"],
				"optional": ["previouslyCached", "parallelCaches"]
			},
			"isDetailedEndpoint": true
		}
	}
}